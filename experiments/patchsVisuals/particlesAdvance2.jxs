<jittershader name="fill-flat-quads">
	<description>Default Shader </description>
	
	<param name="iPosition" type="vec3" state="POSITION" />
	<param name="iColor" type="vec4" state="COLOR" />
	<param name="iVelocity" type="vec4" state="NORMAL" />
	<param name="uTarget" type="vec3" default="0.0 0.0 0.0" />
	<param name="uMaxVel" type="float" default="0.04" />
	<param name="uDamp" type="float" default="0.987" />
	<param name="uForceAmt" type="float" default="0.02" />

	<language name="glsl" version="1.5">
	
		<bind param="iPosition" program="vp" />
		<bind param="iColor" program="vp" />
		<bind param="iVelocity" program="vp" />
		<bind param="uTarget" program="vp" />
		<bind param="uMaxVel" program="vp" />
		<bind param="uDamp" program="vp" />
		<bind param="uForceAmt" program="vp" />

		<program name="vp" type="vertex">
<![CDATA[
#version 330 core

uniform vec3 uTarget;
uniform float uMaxVel;
uniform float uDamp;
uniform float uForceAmt;

in vec3 iPosition;
in vec3 iVelocity;
in vec4 iColor;

out vec3 oPosition;
out vec3 oVelocity;
out vec4 oColor;

void main() {	
	vec3 dir = uTarget - iPosition;
	vec3 normDir = normalize(dir);
	float dist=length(dir);

	vec3 acc = normDir * uForceAmt; // magnitude 0.01
	acc /= (dist*50.0)*(dist*50.0) + 1.0;
	acc /= iColor.x;

	oVelocity = iVelocity + acc;
	oVelocity *= uDamp; // damp
	oVelocity = clamp(oVelocity, vec3(-uMaxVel), vec3(uMaxVel));

	oPosition = iPosition + oVelocity;

	oPosition = mod(oPosition + vec3(2.0), vec3(4.0)) - vec3(2.0);
	
	oColor = vec4 (0.19, 0.37, 0.49, 1) * (length(oVelocity) * 100.0 + 0.01 );
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
#version 330 core

void main() {
}	
]]>
		</program>
	</language>
</jittershader>
